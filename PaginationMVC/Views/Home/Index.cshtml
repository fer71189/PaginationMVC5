@model PagedList.IPagedList<PaginationMVC.Models.Book>
@using PagedList.Mvc
@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>ASP.NET MVC5</h1>
    <p class="lead">Pagination with PagedList plugin</p>
</div>

<div class="row">
    <!-- BEGIN card border -->
    <div class="card border-0 mb-3">
        @using (Html.BeginForm())
        {
            <p>
                Buscar: @Html.TextBox("key_search", ViewBag.FilterValue as string)
                <input type="submit" value="Find" />
            </p>
        }
        <div class="card-body">
            <div class="panel-heading">
                <h4 class="panel-title">Turnos pendientes</h4>
            </div>
            <div class="table-responsive">
                <table class="table table-panel align-middle mb-0">
                    <thead>
                        <tr>
                            <th>@Html.ActionLink(linkText: "Title", actionName: "Index", controllerName: "Home", routeValues: new { sort_Order = "libro_titulo" }, htmlAttributes: null)</th>
                            <th>@Html.ActionLink("Director", "Index", "Home", new { sort_Order = "libro_director" }, null)</th>
                            <th>@Html.ActionLink("PubDate", "Index", "Home", new { sort_Order = "libro_anio" }, null)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td nowrap> @Html.DisplayFor(modelItem => item.Title)</td>
                                <td> @Html.DisplayFor(modelItem => item.Director)</td>
                                <td> @Html.DisplayFor(modelItem => item.PubDate)</td>
                            </tr>
                        }
                    </tbody>
                </table>
                <br />
                Pag. @(Model.PageCount<Model.PageNumber?0:Model.PageNumber)of @Model.PageCount
                @Html.PagedListPager(Model, Page_no => Url.Action("Index",
               new { Page_no, sort_Order = ViewBag.CurrentSortOrder, Filter_value = ViewBag.FilterValue }))
            </div><!-- END table responsive -->
        </div><!-- END card body -->
    </div> <!-- END card border -->
</div>

